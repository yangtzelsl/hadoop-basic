<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
	<!--指定hdfs的nameservice为ns1，需要和core-site.xml中的保持一致 -->
    <property>
        <name>dfs.nameservices</name>
        <value>test-ns1</value>
    </property>
 
    <!-- ns1下面有两个NameNode，分别是nn1，nn2 -->
    <property>
        <name>dfs.ha.namenodes.test-ns1</name>
        <value>nn1,nn2</value>
    </property>
 
    <!-- nn1的RPC通信地址 -->
    <property>
        <name>dfs.namenode.rpc-address.test-ns1.nn1</name>
        <value>test-hdfs01:8020</value>
    </property>
    <!-- nn1的http通信地址 -->
    <property>
        <name>dfs.namenode.http-address.test-ns1.nn1</name>
        <value>test-hdfs01:9870</value>
    </property>
	<!-- nn1的https通信地址 -->
    <property>
        <name>dfs.namenode.https-address.test-ns1.nn1</name>
        <value>test-hdfs01:9871</value>
    </property>
	
	<!-- nn1的rpc通信主机 -->
    <property>
        <name>dfs.namenode.rpc-bind-host.test-ns1.nn1</name>
        <value>test-hdfs01</value>
    </property>
	<!-- nn1的http通信主机 -->
    <property>
        <name>dfs.namenode.http-bind-host.test-ns1.nn1</name>
        <value>test-hdfs01</value>
    </property>
	<!-- nn1的https通信主机 -->
    <property>
        <name>dfs.namenode.https-bind-host.test-ns1.nn1</name>
        <value>test-hdfs01</value>
    </property>
	<!-- nn1的servicerpc通信主机 -->
    <property>
        <name>dfs.namenode.servicerpc-bind-host.test-ns1.nn1</name>
        <value>test-hdfs01</value>
    </property>
 
    <!-- nn2的RPC通信地址 -->
    <property>
        <name>dfs.namenode.rpc-address.test-ns1.nn2</name>
        <value>test-hdfs02:8020</value>
    </property>
    <!-- nn2的http通信地址 -->
    <property>
        <name>dfs.namenode.http-address.test-ns1.nn2</name>
        <value>test-hdfs02:9870</value>
    </property>
	<!-- nn2的https通信地址 -->
    <property>
        <name>dfs.namenode.https-address.test-ns1.nn2</name>
        <value>test-hdfs02:9871</value>
    </property>
	<!-- nn2的rpc通信主机 -->
    <property>
        <name>dfs.namenode.rpc-bind-host.test-ns1.nn2</name>
        <value>test-hdfs02</value>
    </property>
	<!-- nn2的http通信主机 -->
    <property>
        <name>dfs.namenode.http-bind-host.test-ns1.nn2</name>
        <value>test-hdfs02</value>
    </property>
	<!-- nn2的https通信主机 -->
    <property>
        <name>dfs.namenode.https-bind-host.test-ns1.nn2</name>
        <value>test-hdfs02</value>
    </property>
	<!-- nn2的servicerpc通信主机 -->
    <property>
        <name>dfs.namenode.servicerpc-bind-host.test-ns1.nn2</name>
        <value>test-hdfs02</value>
    </property>
	
    <!-- 指定NameNode的edits元数据在JournalNode上的存放位置 -->
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>qjournal://test-hdfs01:8485;test-hdfs02:8485;test-hdfs03:8485/test-ns1</value>
    </property>
 
    <!-- 开启NameNode失败自动切换 -->
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>
 
    <!-- 配置失败自动切换实现方式 -->
    <property>
        <name>dfs.client.failover.proxy.provider.test-ns1</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
    </property>
 
    <!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行-->
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
    </property>
 
    <!-- 使用sshfence隔离机制时需要ssh免登陆 -->
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/root/.ssh/id_rsa</value>
    </property>
 
    <!-- 配置sshfence隔离机制超时时间 -->
    <property>
        <name>dfs.ha.fencing.ssh.connect-timeout</name>
        <value>30000</value>
    </property>
	
	<!-- 指定JournalNode在本地磁盘存放数据的位置 -->
    <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>/opt/module/hadoop/hdata/jdata</value>
    </property>
	
    <!-- 配置journalnode rpc监听地址 -->
    <property>
        <name>dfs.journalnode.rpc-address</name>
        <value>test-hdfs01:8485</value>
    </property>
	<!-- 配置journalnode http监听地址 -->
    <property>
        <name>dfs.journalnode.http-address</name>
        <value>test-hdfs01:8480</value>
    </property>
	<!-- 配置journalnode https监听地址 -->
    <property>
        <name>dfs.journalnode.https-address</name>
        <value>test-hdfs01:8481</value>
    </property>
	
	<!-- 配置datanode HTTP服务端口 -->
    <property>
        <name>dfs.datanode.http.address</name>
        <value>test-hdfs01:9864</value>
    </property>
    <!-- 配置datanode HTTPS服务端口 -->
    <property>
        <name>dfs.datanode.https.address</name>
        <value>test-hdfs01:9865</value>
    </property>
    <!-- 配置datanode 控制端口 -->
    <property>
        <name>dfs.datanode.address</name>
        <value>test-hdfs01:9866</value>
    </property>
    <!-- 配置datanode RPC服务端口 -->
    <property>
        <name>dfs.datanode.ipc.address</name>
        <value>test-hdfs01:9867</value>
    </property>
    
</configuration>
